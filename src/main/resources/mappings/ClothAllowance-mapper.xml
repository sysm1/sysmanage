<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.hzw.security.mapper.ClothAllowanceMapper" >
  
  <sql id="selectId" >
    id, cloth_id as clothId, factory_id as factoryId, allowance, unit, old_sum as oldSum, change_sum as changeSum, 
    create_time as createTime, mark, input_date as inputDate
  </sql>
  
  <sql id="selectIdExt" >
    id, 
    cloth_id as clothId, 
    (select cloth.cloth_name from cloth_info cloth where cloth.id = cloth_allowance.cloth_id ) as clothName,
    factory_id as factoryId, 
    (select factory.name from factory_info factory where factory.id = cloth_allowance.factory_id ) as factoryName,
    allowance, unit,
    old_sum as oldSum, 
    change_sum as changeSum, 
    create_time as createTime, 
    mark,
    input_date as inputDate
  </sql>
  
  <select id="query" resultType="ClothAllowance" parameterType="ClothAllowance">
		select
		<include refid="selectIdExt" />
		from cloth_allowance
		<where> 1=1
		<if test="t.clothId != null and t.clothId != ''">
			and cloth_id = #{t.clothId}
		</if>
		<if test="t.factoryId != null and t.factoryId != ''">
			and	factory_id = #{t.factoryId}
		</if>
		</where>
		order by id desc
	</select>

	<select id="queryByClothAndFactory" resultType="ClothAllowance" parameterType="map">
		select
		<include refid="selectId" />
		from cloth_allowance
		<where> 
		 cloth_id = #{clothId} and factory_id = #{factoryId}
		</where>
		order by id desc
	</select>

	<select id="queryByFind" resultType="ClothAllowance" parameterType="map">
		select
		<include refid="selectIdExt" />
		from cloth_allowance
		<where> 
		<if test="clothId != null and clothId != ''" >
        	and cloth_id=#{clothId}
      	</if>
      	<if test="factoryId != null and factoryId != ''" >
        	and factory_id = #{factoryId}
      	</if>
		<if test="mark != null and mark != ''">
			and mark like '%${mark}%'
		</if>
      	<if test="beginTime != null and beginTime != ''">
			and input_date &gt; #{beginTime}
		</if>
      	<if test="endTime != null and endTime != ''">
			and input_date &lt; #{endTime}
		</if>
		<if test="unit != null and unit != ''">
			and unit = #{unit}
		</if>
		
		<if test="change != null and change != ''">
			<choose>
		        <when test="change == 'positive'">  
		            and change_sum > 0  
		        </when>  
		        <when test="change == 'negative'">  
		             and change_sum &lt; 0 
		        </when> 
		        <when test="change == 'all'">  
		             
		        </when>
		        <when test="change == 'zero'">  
		            and change_sum = 0 
		        </when>
	    	</choose>
		</if>
		</where>
		order by unit desc, id desc
	</select>

	<select id="queryAll" resultType="ClothAllowance">
		select
		<include refid="selectIdExt" />
		from cloth_allowance
		order by id desc
	</select>


	<insert id="add" parameterType="ClothAllowance" useGeneratedKeys="true" keyProperty="id">
		insert into cloth_allowance (
			cloth_id, factory_id, allowance, unit, old_sum, change_sum, create_time, mark, input_date
		)
		values(
			#{clothId},
			#{factoryId},
			#{allowance},
			#{unit},
			#{oldSum},
			#{changeSum},
			#{createTime},
			#{mark},
			#{inputDate}
		)
	</insert>
	
	<delete id="delete" parameterType="String">
		delete from cloth_allowance where
		id=#{id}
	</delete>
	
	<select id="getById" parameterType="String" resultType="ClothAllowance">
		select
		<include refid="selectIdExt" />
		from cloth_allowance where id=#{id}
	</select>
	
	<update id="update" parameterType="ClothAllowance">
		update cloth_allowance
		<set>
		<if test=" clothId!= null" >
        	cloth_id=#{clothId},
      	</if>
      	<if test="factoryId != null" >
        	factory_id=#{factoryId},
      	</if>
		<if test="allowance != null" >
        	allowance=#{allowance},
      	</if>
      	<if test="unit != null" >
        	unit=#{unit},
      	</if>
      	<if test="oldSum != null" >
        	old_sum=#{oldSum},
      	</if>
      	<if test="changeSum != null" >
        	change_sum=#{changeSum},
      	</if>
		<if test="mark != null" >
        	mark=#{mark},
      	</if>
		<if test="createTime != null" >
        	create_time=#{createTime},
      	</if>
      	<if test="inputDate != null" >
        	input_date=#{inputDate},
      	</if>
		</set>
		where id=#{id}
	</update>
  
</mapper>